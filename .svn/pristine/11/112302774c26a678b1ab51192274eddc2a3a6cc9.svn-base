package com.nuvolect.countercloud.main;

import android.app.Activity;
import android.app.DialogFragment;
import android.app.FragmentTransaction;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager.NameNotFoundException;
import android.net.Uri;
import android.os.Bundle;
import android.preference.Preference;
import android.preference.PreferenceFragment;
import android.preference.PreferenceScreen;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.widget.Toast;

import com.nuvolect.countercloud.R;
import com.nuvolect.countercloud.license.AppSpecific;
import com.nuvolect.countercloud.license.GooglePlayActivity;
import com.nuvolect.countercloud.license.LConst;
import com.nuvolect.countercloud.license.LicenseClient;
import com.nuvolect.countercloud.license.LicensePersist;
import com.nuvolect.countercloud.license.LicenseUtil;
import com.nuvolect.countercloud.util.ActionBarUtil;
import com.nuvolect.countercloud.util.LogUtil;
import com.nuvolect.countercloud.util.LogUtil.LogType;
import com.nuvolect.countercloud.util.SimpleCrypto;

import org.json.JSONException;
import org.json.JSONObject;

public class SettingsFragment extends PreferenceFragment
implements SharedPreferences.OnSharedPreferenceChangeListener {

    private static final boolean DEBUG = false;
    static Activity m_act;
    private View m_rootView;
    private String mLicenseSummary;

    @Override
    public void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        if(DEBUG)LogUtil.log("SettingsFragment onCreate");

        m_act = getActivity();
        // Load the preferences from an XML resource
        addPreferencesFromResource(R.xml.settings);

        // Show the Up button in the action bar.
        ActionBarUtil.showActionBarUpButton(m_act);

        // Set license summary
        mLicenseSummary = LicensePersist.getLicenseSummary( m_act);
        Preference licensePref = findPreference(LicensePersist.LICENSE_UPGRADE);
        licensePref.setSummary( mLicenseSummary );
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

        m_rootView = inflater.inflate( R.layout.settings_preference, container, false);

        String version = "";
        try {
            PackageInfo pInfo = m_act.getPackageManager().getPackageInfo(m_act.getPackageName(), 0);
            version = pInfo.versionName;
        } catch (NameNotFoundException e1) { }

        TextView appVersionTv = (TextView) m_rootView.findViewById(R.id.settings_app_version);
        appVersionTv.setText("CounterCloud version "+version);

        return m_rootView;
    }

    @Override
    public void onResume() {
        super.onResume();
        if(DEBUG)LogUtil.log("SettingsFragment onResume");
        getPreferenceScreen().getSharedPreferences()
            .registerOnSharedPreferenceChangeListener(this);
    }

    @Override
    public void onPause() {
        super.onPause();
        if(DEBUG)LogUtil.log("SettingsFragment onPause");
        getPreferenceScreen().getSharedPreferences()
            .unregisterOnSharedPreferenceChangeListener(this);
    }

    /**
     * Display the fragment in the provided container.
     * @param act
     * @param containerViewId
     */
    public static SettingsFragment startSettingsFragment(Activity act, int containerViewId){

        FragmentTransaction ft = act.getFragmentManager().beginTransaction();
        SettingsFragment frag = new SettingsFragment();
        ft.replace(containerViewId, frag);
        ft.commit();

        return frag;
    }

    @Override
    public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {

        if( preference.getKey().contentEquals( "license_upgrade" )){

                if( mLicenseSummary.contains(LConst.CC_SKU) ||
                        mLicenseSummary.contains(LConst.SS_SKU) ){

                    Toast.makeText(m_act, "Application already upgraded", Toast.LENGTH_SHORT).show();

                }else{

                    /*
                     * If license manager app installed, start it.
                     * Otherwise present UI asking user to download it.
                     */
                    launchOrLoadSecureSuite(m_act);
                }
        }
        if( preference.getKey().contentEquals( "open_source_license" )){

            DisplayOpenSourceInfoFragment frag = new DisplayOpenSourceInfoFragment();
            frag.show(getFragmentManager(), "display_open_source_info");
        }

        if( preference.getKey().contains("rate_app_google_play")){

            String url =
                    "https://play.google.com/store/apps/details?id=com.nuvolect.countercloud";
            Intent i = new Intent(Intent.ACTION_VIEW);
            i.setData(Uri.parse(url));
            startActivity(i);
        }

        return super.onPreferenceTreeClick(preferenceScreen, preference);
    }

    public static class DisplayOpenSourceInfoFragment extends DialogFragment {
        static DisplayOpenSourceInfoFragment newInstance() {
            return new DisplayOpenSourceInfoFragment();
        }

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

            View v = inflater.inflate( R.layout.open_source_license, container, false);

            setStyle( DialogFragment.STYLE_NORMAL, android.R.style.Theme_Holo_Light);
            getDialog().setTitle("Software Licenses");

            return v;
        }
    }
    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        switch( requestCode ){

        case CConst.LICENSE_SHOP_ACTION:{

            if(DEBUG)LogUtil.log("onActivityResult: license shop action");

            if( resultCode == Activity.RESULT_OK){

                Bundle activityResultBundle = data.getExtras();
                String cryp_license = activityResultBundle.getString(LConst.CLIENT_APP_LICENSE);
                String clearTextPackage="";
                try {
                    clearTextPackage = SimpleCrypto.decrypt(LConst.CC_PASSPHRASE, cryp_license);
                } catch (Exception e) {
                    LogUtil.logException(m_act, LogType.CRYPT, e);
                }
                LogUtil.log("License returned: "+clearTextPackage);

                if( clearTextPackage.contains("cc_sku") || clearTextPackage.contains("ss_sku")){

                    String hardwareId = LicenseUtil.getUniqueInstallId(m_act);
                    LicensePersist.setPremiumUser(m_act, true, hardwareId);
                    String sku_purchase = "";

                    try {
                        JSONObject jobj = new JSONObject(clearTextPackage);
                        sku_purchase = jobj.getString(LConst.SKU_PURCHASE);
                    } catch (JSONException e) {
                    } catch (Exception e) {
                        LogUtil.logException(m_act, LogType.LICENSE_UTIL, e);
                    }

                    LicensePersist.setLicenseSku(m_act, sku_purchase);
                    m_act.recreate();
                }
            }
            else
                LogUtil.log("License check failed");

            break;
        }

        default:
            if(DEBUG)LogUtil.log("onActivityResult: default action");
        }
    }

    @Override
    public void onSharedPreferenceChanged(SharedPreferences pref, String key) {

    }

    /**
     * If license manager app installed, start it.
     * Otherwise present UI asking user to download it.
     */
    public static void launchOrLoadSecureSuite(Activity act){

        Intent intent = new Intent();
        intent.setAction(AppSpecific.SS_SHOP_THIS_APP);
        intent.putExtra(LConst.EARLY_ADOPTER, LicensePersist.isEarlyAdopter(act));

        if( LicenseClient.isIntentAvailable( act, intent)){

            act.startActivity(intent);
            act.startActivityForResult(intent, CConst.LICENSE_SHOP_ACTION);
        }
        else{
            /*
             * Show upgrade shop dialog
             */
            Intent i = new Intent( act, GooglePlayActivity.class);
            act.startActivity(i);
        }
    }

}
