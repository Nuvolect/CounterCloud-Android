/*******************************************************************************
 * Copyright (c) 2011 - 2014, Nuvolect LLC. All Rights Reserved.
 * All intellectual property rights, including without limitation to
 * copyright and trademark of this work and its derivative works are
 * the property of, or are licensed to, Nuvolect LLC.
 * Any unauthorized use is strictly prohibited.
 ******************************************************************************/
package com.nuvolect.countercloud.util;

import java.util.ArrayList;

import android.app.NotificationManager;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.support.v4.app.NotificationCompat;
import android.support.v4.app.TaskStackBuilder;

import com.nuvolect.countercloud.main.EventLogActivity;
import com.nuvolect.countercloud.R;

public class NotificationUtil {
	public static final int NOTIFICATION_ID = 1;

	public static ArrayList<String> fileHistory = new ArrayList<String>();
	public static int runningTotal = 0;

	public static void pushNotification(Context ctx, String title, String smallText) {

		Class<?> nextActivity = EventLogActivity.class;

		// Make sure duplicates are not added to the list
		if( fileHistory.size() > 0 && fileHistory.get(0).contentEquals( smallText))
		    return;

		fileHistory.add( 0, smallText);
		if( fileHistory.size() > 6){       // Only keep last six

		    for( int i = fileHistory.size() -1; i > 5; --i)
		        fileHistory.remove(i);
		}

		Resources res = ctx.getResources();
		Bitmap largeIcon = BitmapFactory.decodeResource( res, R.drawable.cc_large_icon);

		// When using proper icon sizes this scaling code is not required
		//		int height = (int) res.getDimension(android.R.dimen.notification_large_icon_height);
		//		int width = (int) res.getDimension(android.R.dimen.notification_large_icon_width);
		//		largeIcon = Bitmap.createScaledBitmap(largeIcon, width, height, false);

		@SuppressWarnings("deprecation")
        NotificationCompat.Builder builder = new NotificationCompat.Builder(ctx)
		.setTicker( title)
		.setContentTitle( title)
		.setContentText( smallText)
		.setSmallIcon( R.drawable.cc_small_icon)
		.setLargeIcon( largeIcon)
		.setAutoCancel( false)
		.setNumber( ++runningTotal)
		.setAutoCancel(true)
		.setContentIntent(
				TaskStackBuilder.from(ctx)
				.addParentStack( nextActivity)
				.addNextIntent(new Intent(ctx, nextActivity)
				).getPendingIntent(0, 0));

		NotificationCompat.InboxStyle inboxStyle = new NotificationCompat.InboxStyle();

		inboxStyle.setBigContentTitle("CounterCloud Activity");
		builder.setStyle(inboxStyle);

		for( String file : fileHistory)
			inboxStyle.addLine(file);

		NotificationManager nm = (NotificationManager) ctx.getSystemService(Context.NOTIFICATION_SERVICE);
		nm.notify( NOTIFICATION_ID, inboxStyle.build());
	}

	public static void cancelAll(Context context) {
		NotificationManager nm = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
		nm.cancelAll();
	}
}
